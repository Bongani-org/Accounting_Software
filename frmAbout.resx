<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lKBSlKBSlKBSlKBSlKBSlKD/2Q==
</value>
  </data>
</root>